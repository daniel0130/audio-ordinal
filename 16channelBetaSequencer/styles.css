/* --- Variables (Theme) --- */
:root {
    --scale-factor: 1vw;
    --main-bg-color: #000;
    --secondary-bg-color: #333;
    --primary-color: #fff;
    --accent-color: #f00;
    --button-dimension: 50px;
    --control-button-dimension: 18px;
    --step-button-max-width: 18px;
    --step-button-max-height: calc(18px * var(--scale-factor));    
    --box-shadow-style: 0 0 10px var(--main-bg-color) inset;
    --default-font: Arial, sans-serif;
}
@media (max-width: 1200px) {
    #main-container {
        transform: scale(0.9);
    }
}

@media (max-width: 1000px) {
    #main-container {
        transform: scale(0.8);
    }
}

@media (max-width: 800px) {
    #main-container {
        transform: scale(0.7);
    }
}

@media (max-width: 600px) {
    #main-container {
        transform: scale(0.6);
    }
}

/* --- Global Styles --- */
body {
    background-color: var(--main-bg-color);
    color: var(--primary-color);
    font: normal normal normal 100%/1 var(--default-font);
}

/* --- Drum Machine Container --- */
#drum-machine {
    max-width: 100%; /* Set a maximum width to fit within the available space */
    margin: 0 auto;
    padding: 0;
    background-color: var(--secondary-bg-color);
    border: 5px solid var(--main-bg-color);
    box-sizing: border-box; /* Include padding and border in the total width */
}


/* --- Headers & Text Elements --- */
h1 {
    text-align: center;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
}

h3 .subtext {
    font-size: 0.8em;
    opacity: 0.7;
}

h3:hover .subtext {
    font-size: 1em;
    opacity: 0.5;
}

.title {
    font-size: 40px;
}

.small-text, .smaller-text {
    font-size: 20px;
}

.larger-text {
    font-size: 1.5em;
}

.centered, .centered-text {
    display: block;
    text-align: center;
}

.bright-orange {
    color: #f7931a;
}

/* --- Buttons & Controls --- */
.button, h1 .button {
    border: none;
    background-color: var(--primary-color);
    cursor: pointer;
    box-shadow: var(--box-shadow-style);
    padding: 10px;
    color: var(--main-bg-color);
    font-size: 1em;
}

.control-button {
    width: var(--control-button-dimension);
    height: var(--control-button-dimension);
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold; /* Making the letters bold */
    padding: 0; /* Resetting padding */
    margin: 0; /* Resetting margin */
    position: relative; /* Making it a stacking context for tooltip */
}

.letter {
    z-index: 1; /* Ensuring it stays above the tooltip */
    font-size: 16px; /* Adjust the font size as necessary */
}

.play-button, .stop-button {
    position: relative;
    width: var(--button-dimension);
    height: var(--button-dimension);
}

#play.selected {
    background-color: #00ff00;
}

.stop-button {
    background-color: var(--accent-color);
}

.button-label.stop {
    color: #ff0000; /* Red */
}

/* Container for each sample's play button and name */
div[idModalContent] div {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    margin-bottom: 10px;
    cursor: pointer;
}

/* Play button next to each sample name */
div[idModalContent] div button {
    margin-right: 10px;
    background-color: #f0f0f0;
    border: none;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

/* Hover effect for play button */
div[idModalContent] div button:hover {
    background-color: #ddd;
}

/* Sample name styling */
div[idModalContent] div a {
    text-decoration: none;
    display: flex;
    color: black;
    transition: color 0.3s ease;
}

/* Hover effect for sample name */
div[idModalContent] div a:hover {
    color: #666;
}

/* --- Channel Elements --- */
.channel {
    width: 92vw; /* You can adjust this value as needed */
    margin: 5px;
    display: flex;
    justify-content: space-between;
}

.ordinal-loaded {
    border: 2px solid #f7931a; /* or whatever shade of orange you prefer */
}

/* Media query for screens smaller than 600px */
@media (max-width: 600px) {
    .channel {
        width: 100%; /* Full width on small screens */
    }
}





/* --- Containers & Layout --- */
.steps-container {
    flex-wrap: wrap;
    gap: 0px;
}

.button-container, .subtext-container {
    display: center;
    align-items: center;
}

.step-button:nth-child(4n+1):not(:nth-child(16n+1)) {
    background-color: #add8e6; /* light blue */
}

.step-button:nth-child(16n+1) {
    background-color: #ffff00; /* yellow */
}

/* Increase specificity for selected state to override nth colors */
.step-button.selected,
.step-button.selected:nth-child(4n+1):not(:nth-child(16n+1)),
.step-button.selected:nth-child(16n+1) {
    background-color: var(--accent-color);
}

.step-button.playing {
    box-shadow: 0 0 10px rgb(150, 150, 150) inset;
}

.step-button.playing.selected {
    box-shadow: 0 0 10px rgb(150, 1, 1) inset;
}

.step-button {
    position: relative;
    width: var(--step-button-max-width);  /* Set the width */
    height: var(--step-button-max-width);  /* Set the height equal to the width */
    background-color: #555;
    color: #fff;
    max-width: var(--step-button-max-width);
    max-height: var(--step-button-max-height);
}


.channel-controls {
    margin-top: 0px;
}

/* --- Button Specific Styles --- */
#play {
    animation: flash 2s infinite ease-in-out;
}

#play.selected, 
#stop.selected ~ #play {
    animation: none;
}

#stop.selected ~ #play, .step-button.selected, .mute-button.selected, .solo-button.selected {
    background-color: var(--accent-color);
}

.clear-button {
    background-color: rgb(153, 153, 2);
}

.mute-button {
    background-color: #800;
}

.solo-button {
    background-color: rgb(177, 105, 33);
}

.solo-button.selected {
    background-color: rgb(255, 128, 0);
}

@keyframes flashingYellow {
    0% { background-color: rgb(153, 153, 2); }
    50% { background-color: rgb(255, 255, 0); } /* Bright yellow */
    100% { background-color: rgb(153, 153, 2); }
}

.clear-button.flashing {
    animation: flashingYellow 0.5s infinite; /* Will make it blink twice per second */
}

.step-button.dimmed {
    opacity: 0.5; /* You can adjust this value as needed */
}



.load-sample-button {
    flex: 1;
    overflow: auto;
    text-overflow: ellipsis;
    font-size: 0.5em;
    height: 20px;
    min-width: 100px;
    padding: 5px;
}

.load-sample-button:hover::after {
    position: absolute;
    top: 100%;
    left: 0;
    background: var(--primary-color);
    color: var(--main-bg-color);
    z-index: 1;
}

/* --- Steps and Sequence Light Styles --- */
#sequence-lights {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    width: 90%;
    margin-left: 10%;
}

.sequence-light {
    grid-column: span 1;
  
}

.sequence-light {
    height: 15px;
    background-color: grey;
}

.sequence-light.on {
    background-color: greenyellow;
}

/* --- Tooltip Styles --- */
/* --- Tooltip Styles --- */
.tooltip {
    position: relative;
    display: inline-block;
    cursor: pointer;
}

.tooltip .tooltiptext {
    display: none;
    visibility: hidden;
    max-width: 150px; /* Reduce the width */
    background-color: #333;
    color: #fff;
    text-align: center;
    border-radius: 8px;
    padding: 5px; /* Reduce the padding */
    position: absolute;
    z-index: 1;
    bottom: calc(100% + 5px); /* Adjust the position to be just below the button */
    left: 50%;
    transform: translateX(-50%);
    opacity: 0.7; /* Reduced opacity to make it semi-transparent */
    transition: opacity 0.3s;
    font-size: 12px; /* Reduce the font size */
    pointer-events: none; /* Prevent the tooltip from intercepting clicks */
}

.tooltip:hover .tooltiptext {
    visibility: visible;
    opacity: 0.7; /* Maintain the reduced opacity even on hover */
}



/* --- Animations --- */
@keyframes flash {
    0%   { background-color: var(--primary-color); }
    50%  { background-color: #00ff00; }
    100% { background-color: var(--primary-color); }
}


/* --- LOWER Button and Container Styles --- */
.new-button-container {
    position: absolute;
    bottom: 20px;
    right: 20px;
    text-align: right;
}



/* --- Mode Switcher Styles --- */
.mode-switcher {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-left: 50px;
}

.mode-switcher label {
    margin-right: 10px;
}

.mode-switcher input[type="checkbox"] {
    appearance: none;
    width: 40px;
    height: 20px;
    background-color: #ccc;
    border-radius: 10px;
    position: relative;
    cursor: pointer;
}

.mode-switcher input[type="checkbox"]:checked {
    background-color: #2196f3;
}

.mode-switcher input[type="checkbox"]::before {
    content: "";
    position: absolute;
    top: 1px;
    left: 1px;
    width: 18px;
    height: 18px;
    background-color: #fff;
    border-radius: 50%;
    transition: transform 0.2s ease;
}

.mode-switcher input[type="checkbox"]:checked::before {
    transform: translateX(20px);
}

#save-button, #load-button {
  margin-left: 2px; /* Add some space between buttons */
  right: 0px;
}

/* CSS for evenly spacing "Quick Play" buttons between the checkbox and "Save/Load" buttons */
.button-container {
  align-items: center;
  justify-content: space-between; /* Space items evenly */
}

.quick-play-button {
    width: 24px; /* Adjust the width as needed */
    height: 24px; /* Adjust the height as needed */
    background-color: green;
    display: inline-flex;
    justify-content: center; /* Center the content horizontally */
    align-items: center; /* Center the content vertically */
    margin: 0 15px; /* Margin to space buttons */
    cursor: pointer; /* Add pointer cursor to indicate interactivity */
}

.quick-play-button strong {
    display: block; /* Ensure the <strong> element takes full width */
    font-weight: bold;
}

.quick-play-button.active {
    background-color: limegreen; /* Change to bright green when active */
}

/* Reduce the font size and padding for the buttons */
#prev-sequence,
#next-sequence,
button[for="mode-switcher"] {
    font-size: 5px; /* Adjust the font size as needed */
    padding: 5px 10px; /* Adjust the padding as needed */
}


