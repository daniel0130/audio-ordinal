let totalNumberOfSequences=16;function handleStep(e,t,n){console.log("handleStep entered");let o="true"===e.dataset.muted;return t.toggleMuteSteps.includes(n)&&(o=!o,e.dataset.muted=o?"true":"false",updateMuteState(e,o),console.log("Mute toggled by the handleStep function")),o}function renderPlayhead(e,t){console.log("renderPlayhead entered"),e.forEach(((e,n)=>{e.classList.remove("playing"),e.classList.remove("triggered"),n===t&&e.classList.add("playing"),e.classList.contains("selected")&&e.classList.add("triggered")}))}function playStep(){console.log("[stepHandling][playStep] Function entered");const e=window.unifiedSequencerSettings.getCurrentSequence(),t=presets.preset1;for(let n=0;n<16;n++){console.log(`[playStep] Processing channel index: ${n}`);const o=channels[n],u=o.querySelectorAll(".step-button");let r=t.channels[n];r||(console.warn(`No preset data for channel index: ${n}`),r={steps:Array(4096).fill(!1),mute:!1,url:null}),renderPlayhead(u,currentStep);const l=handleStep(o,r,totalStepCount);console.log(`[playStep] Mute state for channel index ${n}: ${l}`),playSound(e,o,currentStep),console.log(`[playStep] Playing sound for current sequence: ${e}, channel index: ${n}, current step: ${currentStep}`)}incrementStepCounters();if(document.getElementById("continuous-play").checked&&0===currentStep){handleSequenceTransition((e+1)%totalNumberOfSequences)}}function incrementStepCounters(){currentStep=(currentStep+1)%64,totalStepCount+=1,nextStepTime+=stepDuration,currentStep%4==0&&(beatCount++,emitBeat(beatCount)),currentStep%16==0&&(barCount+=1,emitBar(barCount)),currentStep%64==0&&(sequenceCount++,console.log(`[playStep-count] Sequence count: ${sequenceCount}`)),console.log(`[SeqDebug][playStep-count] Next step time: ${nextStepTime}`)}function handleSequenceTransition(e){console.log("[SeqDebug][stepHandling] handleSequenceTransition entered"),console.log(`[SeqDebug] handleSequenceTransition called with sequence: ${e}`),window.unifiedSequencerSettings.setCurrentSequence(e),console.log(`[SeqDebug][stepHandling] Sequence set to ${e} at ${(new Date).toLocaleTimeString()}`);const t=document.getElementById("current-sequence-display");t&&(t.innerHTML=`Sequence: ${e}`),resetCountersForNewSequence(),createStepButtonsForSequence(),setTimeout((()=>{updateUIForSequence(e),console.log(`[SeqDebug][handleSequenceTransition][stepHandling] UI updated for sequence ${e} at ${(new Date).toLocaleTimeString()}`)}),100)}function resetCountersForNewSequence(){beatCount=0,barCount=0,currentStep=0,totalStepCount=0}