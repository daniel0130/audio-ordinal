const mainContainer=document.getElementById("app"),channelTemplateContainer=document.querySelector(".channel-template"),channelTemplate=channelTemplateContainer.querySelector(".channel"),quickPlayButtons=[];let currentActiveIndex=null;const quickPlayContainer=document.createElement("div");function setActiveSequence(e){null!==currentActiveIndex&&currentActiveIndex!==e&&(console.log(`Deactivating previously active sequence ${currentActiveIndex}`),quickPlayButtons[currentActiveIndex].classList.add("inactive")),quickPlayButtons[e].classList.remove("inactive"),quickPlayButtons.forEach((t=>{t!==quickPlayButtons[e]&&t.classList.add("inactive")})),currentActiveIndex=e}function updateActiveQuickPlayButton(){quickPlayButtons.forEach((e=>{e.classList.remove("active")}));quickPlayButtons[currentSequence].classList.add("active")}function insertQuickPlayButtons(){const e=document.getElementById("continuous-play"),t=document.getElementById("quick-play-button");if(e&&t)for(let n=0;n<16;n++){const c=createQuickPlayButton(n);e.parentNode.insertBefore(c,t)}else console.log("QUICKPLAY BUTTONS TEMPORARILY REMOVED UNTIL THEY CAN BE FIXED")}function loadAndDisplaySequence(e){currentSequence=e,console.log(`[loadAndDisplaySequence] currentSequence updated to:  ${e}`),loadSequence(e),document.getElementById("current-sequence-display").textContent=`Sequence ${currentSequence}`,updateActiveQuickPlayButton()}function createQuickPlayButton(e){const t=document.createElement("div");t.classList.add("quick-play-button","tooltip"),t.dataset.sequenceIndex=e,t.innerHTML=e;const n=document.createElement("span");return n.classList.add("tooltiptext"),n.innerHTML=`Quick Load Sequence ${e}<br><br>Right click to change button colour.`,t.appendChild(n),quickPlayButtons.push(t),t.addEventListener("click",(function(){setActiveSequence(e)})),t.addEventListener("contextmenu",(function(e){e.preventDefault(),showColorPicker(e,t)})),t}quickPlayContainer.id="quickplay-container",quickPlayContainer.style.display="flex",quickPlayContainer.style.justifyContent="center",quickPlayContainer.style.marginBottom="20px",insertQuickPlayButtons(),quickPlayButtons.forEach((e=>{e.addEventListener("click",(()=>{loadAndDisplaySequence(parseInt(e.dataset.sequenceIndex,10))}))})),quickPlayButtons.forEach((e=>e.classList.add("inactive")));for(let e=0;e<=15;e++){let t=channelTemplate.cloneNode(!0);t.id=`channel-${e}`,mainContainer.appendChild(t)}channelTemplateContainer.remove();const setupCompleteEvent=new Event("setupComplete");window.dispatchEvent(setupCompleteEvent);